// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	access "github/zjzjzjzj1874/go-zero-temp/access/internal/handler/access"
	permission "github/zjzjzjzj1874/go-zero-temp/access/internal/handler/permission"
	role "github/zjzjzjzj1874/go-zero-temp/access/internal/handler/role"
	"github/zjzjzjzj1874/go-zero-temp/access/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/liveness",
				Handler: livenessHandler(serverCtx),
			},
		},
		rest.WithPrefix("/access"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/swagger",
				Handler: access.SwaggerHandler(serverCtx),
			},
		},
		rest.WithPrefix("/access"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/roles",
				Handler: role.CreateRoleHandler(serverCtx),
			},
			{
				Method:  http.MethodPut,
				Path:    "/roles/:id",
				Handler: role.UpdateRoleHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/roles/:id",
				Handler: role.DeleteRoleHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/roles",
				Handler: role.GetRoleListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/roles/:roleId/permissions",
				Handler: role.AssignPermissionsHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/roles/:roleId/permissions",
				Handler: role.GetRolePermissionsHandler(serverCtx),
			},
		},
		rest.WithPrefix("/access"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/permissions",
				Handler: permission.CreatePermissionHandler(serverCtx),
			},
			{
				Method:  http.MethodPut,
				Path:    "/permissions/:id",
				Handler: permission.UpdatePermissionHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/permissions/:id",
				Handler: permission.DeletePermissionHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/permissions",
				Handler: permission.GetPermissionListHandler(serverCtx),
			},
		},
		rest.WithPrefix("/access"),
	)
}
